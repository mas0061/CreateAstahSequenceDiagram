import com.sun.java.util.jar.pack.Instruction;

apply plugin: 'groovy'
apply plugin: 'eclipse'
//apply plugin: 'osgi'

project.ext {
	prjVersion = '1.0'
	astahVersion = '6.7'
	astahEdition = 'all'
	name = 'generate_sequence_fromVDM'
	outputName = name + '-' + prjVersion
	namespace = 'net.mas0061.astah'
}

repositories { mavenCentral() }

dependencies {
	groovy group: 'org.codehaus.groovy', name: 'groovy', version: '2.0.8'
	compile fileTree(dir: 'lib', include: '*.jar')
	compile 'org.slf4j:slf4j-simple:1.6.1'

	//	compile 'org.apache.felix:org.osgi.core:1.4.0'
	//	compile 'org.sonatype.tycho:org.eclipse.osgi:3.6.2.R36x_v20110210'
	testCompile "junit:junit:4.11"
}

//jar {
//	archiveName = project.outputName + ".jar"
//	manifest {
//		name = 'VDM動作シーケンス図作成プラグイン'
//		version = project.prjVersion
//		symbolicName = project.namespace + '.plugin.sequence'
//		instruction 'Export-Package', '*'
//		instruction 'Import-Package', '*'
//		instruction 'Bundle-Vendor', 'mas0061'
//		instruction 'Bundle-Description', 'generate sequence diagram from VDM'
//		instruction 'Bundle-Activator', project.namespace + '.plugin.sequence.Activator'
//		instruction 'Astah-Version', project.astahVersion
//		instruction 'Astah-Edition', project.astahEdition
//	}
//}

ant.condition(property: "os", value: "windows") { os(family: "windows") }
ant.condition(property: "os", value: "mac") { os(family: "mac") }
ant.condition(property: "os", value: "unix") { os(family: "unix") }

task execAstah(type : Exec) {
	switch(ant.properties.os){
		case 'windows':
			commandLine '/C:/Program Files/astah-professional/astah-pro.bat', './SampleProject.asta'
			break
		case 'mac':
			commandLine '/Applications/astah professional/astah professional.app', './SampleProject.asta'
			break
		case 'unix':
			println "Is astah installed?"
			break
	}
}